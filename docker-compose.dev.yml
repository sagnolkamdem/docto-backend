version: '3'
services:
    traefik:
        container_name: laravel_traefik
        image: traefik:2.7
        command:
            - --providers.docker
            - --providers.docker.exposedByDefault=false
            - --api.dashboard=true
            - --api.insecure=true
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.rule=Host(`traefik.$DOMAIN`)
            - traefik.http.routers.traefik.service=traefik
            - traefik.http.services.traefik.loadbalancer.server.port=8080
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    api_tabiblib:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        labels:
            - traefik.enable=true
            - traefik.http.routers.api_router.rule=Host(`${API_SUBDOMAIN}.${DOMAIN}`)
            - traefik.http.services.api.test.loadbalancer.server.port=8002
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-APP_PORT}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            # Docker image.
            # ---------------------
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            # APP
            APP_NAME: "${APP_NAME}"
            APP_ENV: "${APP_ENV}"
            APP_URL: "${APP_URL}"
            APP_DEBUG: "${APP_DEBUG}"
            APP_SERVICE: "${APP_SERVICE}"
            API_PREFIX: "${API_PREFIX}"
            APP_KEY: "${APP_KEY}"
            PATIENT_APP_URL: "${PATIENT_APP_URL}"
            PRACTICIAN_APP_URL: "${PRACTICIAN_APP_URL}"
            ADMIN_APP_URL: "${ADMIN_APP_URL}"
            # i18n.
            DEFAULT_LOCALE: "${DEFAULT_LOCALE}"
            # Storage.
            STORAGE_PUBLIC_SOURCE: "public.storage.s3"
            STORAGE_PRIVATE_SOURCE: "private.storage.s3"
            STORAGE_ENDPOINT: "http://minio:9000"
            STORAGE_PUBLIC_BUCKET: "${STORAGE_PUBLIC_BUCKET}"
            STORAGE_PRIVATE_BUCKET: "${STORAGE_PRIVATE_BUCKET}"
            STORAGE_ACCESS_KEY: "${STORAGE_ACCESS_KEY}"
            STORAGE_SECRET_KEY: "${STORAGE_SECRET_KEY}"
            # Database.
            DB_CONNECTION: "${DB_CONNECTION}"
            DB_HOST: "${DB_HOST}"
            DB_PORT: "${DB_PORT}"
            DB_DATABASE: "${DB_DATABASE}"
            DB_USERNAME: "${DB_USERNAME}"
            DB_PASSWORD: "${DB_PASSWORD}"
            # Mail
            MAIL_MAILER: "${MAIL_MAILER}"
            MAIL_HOST: "${MAIL_HOST}"
            MAIL_PORT: "${MAIL_PORT}"
            MAIL_USERNAME: "${MAIL_USERNAME}"
            MAIL_PASSWORD: "${MAIL_PASSWORD}"
            MAIL_ENCRYPTION: "${MAIL_ENCRYPTION}"
            MAIL_FROM_ADDRESS: "${MAIL_FROM_ADDRESS}"
            MAIL_FROM_NAME: "${MAIL_FROM_NAME}"
            # Linode
            LINODE_ACCESS_KEY_ID: "${LINODE_ACCESS_KEY_ID}"
            LINODE_SECRET_ACCESS_KEY: "${LINODE_SECRET_ACCESS_KEY}"
            LINODE_DEFAULT_REGION: "${LINODE_DEFAULT_REGION}"
            LINODE_BUCKET: "${LINODE_BUCKET}"
            LINODE_ENDPOINT: "${LINODE_ENDPOINT}"
            LINODE_URL: "${LINODE_URL}"
            LINODE_FOLDER: "${LINODE_FOLDER}"
            LINODE_USE_PATH_STYLE_ENDPOINT: "${LINODE_USE_PATH_STYLE_ENDPOINT}"
            # Click Send
            CLICKSEND_USERNAME: "${CLICKSEND_USERNAME}"
            CLICKSEND_API_KEY: "${CLICKSEND_API_KEY}"
            CLICKSEND_BASE_URL: "${CLICKSEND_BASE_URL}"
            # Driver
            BROADCAST_DRIVER: "${BROADCAST_DRIVER}"
            CACHE_DRIVER: "${CACHE_DRIVER}"
            FILESYSTEM_DISK: "${FILESYSTEM_DISK}"
            QUEUE_CONNECTION: "${QUEUE_CONNECTION}"
            SESSION_DRIVER: "${SESSION_DRIVER}"
            SESSION_LIFETIME: "${SESSION_LIFETIME}"
            # Pusher
            PUSHER_APP_ID: "${PUSHER_APP_ID}"
            PUSHER_APP_KEY: "${PUSHER_APP_KEY}"
            PUSHER_APP_SECRET: "${PUSHER_APP_SECRET}"
            PUSHER_HOST: "${PUSHER_HOST}"
            PUSHER_PORT: "${PUSHER_PORT}"
            PUSHER_SCHEME: "${PUSHER_SCHEME}"
            PUSHER_APP_CLUSTER: "${PUSHER_APP_CLUSTER}"
            # OneSignal
            ONESIGNAL_APP_KEY: "${ONESIGNAL_APP_KEY}"
            ONESIGNAL_API_KEY: "${ONESIGNAL_API_KEY}"
            ONESIGNAL_URL: "${ONESIGNAL_URL}"
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        environment:
            REDIS_PASSWORD: "${REDIS_PASSWORD}"
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9001}:9001'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        labels:
            - traefik.enable=true
            - traefik.http.routers.minio_router.rule=Host(`${STORAGE_SUBDOMAIN}.${DOMAIN}`)
            - traefik.http.routers.minio_router.service=minio_service
            - traefik.http.services.minio_service.loadbalancer.server.port=9001
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
            MINIO_ACCESS_KEY: "${STORAGE_ACCESS_KEY}"
            MINIO_SECRET_KEY: "${STORAGE_SECRET_KEY}"
        volumes:
            - 'sail-minio:/data/minio'
        networks:
            - sail
        command: 'minio server /data/minio --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - curl
                - '-f'
                - 'http://${DOMAIN}:9001/minio/health/live'
            retries: 3
            timeout: 5s
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            SOKETI_DEBUG: '${SOKETI_DEBUG:-1}'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        ports:
            - '${PUSHER_PORT:-6001}:6001'
            - '${PUSHER_METRICS_PORT:-9601}:9601'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-minio:
        driver: local
